use std::fmt::{Display, Formatter};

#[derive(Debug, Copy, Clone, PartialEq)]
pub enum TokenType {
    // Basic Tokens
    ParenOpen,
    ParenClose,
    BraceOpen,
    BraceClose,
    BracketOpen,
    BracketClose,
    Comma,
    Dot,
    Colon,
    Semicolon,
    Range,
    RangeEqual,

    // Operators or Unaries
    Not,
    NotEqual,
    Equal,
    EqualEqual,
    Greater,
    GreaterEqual,
    Less,
    LessEqual,
    Minus,
    Plus,
    Slash,
    Star,
    Percent,

    // Literals
    Identifier,
    Constant,
    Wildcard,
    CharLiteral,
    BasicString,
    InterpolatedString,
    Integer,
    Float,

    // Keywords
    And,
    Or,
    Class,
    Super,
    Implementing,
    ClassSelf,
    True,
    False,
    Use,
    Match,
    In,
    When,
    Pass,

    Arrow,

    // Generated by Scanner
    Indent,
    Dedent,

    // Meta
    Decorator,
    Space,
    Comment,
    Documentation,
    Endline,
    Eof,

    //Errors
    UnexpectedCharacter(char),
    UnterminatedChar,
    EmptyChar,
    UnterminatedString,
}

impl Display for TokenType {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        write!(f, "{:?}", self)
    }
}
